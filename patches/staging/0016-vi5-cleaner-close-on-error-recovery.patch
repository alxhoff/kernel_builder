diff --git a/kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi5_fops.c b/kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi5_fops.c
index 467fbd323..1bd0a9cf0 100644
--- a/kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi5_fops.c
+++ b/kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi5_fops.c
@@ -628,9 +628,15 @@ static int vi5_channel_error_recover(struct tegra_channel *chan,
 
 	/* stop vi channel */
 	for (vi_port = 0; vi_port < chan->valid_ports; vi_port++) {
-		filp_close(chan->fp[vi_port], NULL);
+		err = vi_capture_release(chan->tegra_vi_channel[vi_port],
+			CAPTURE_CHANNEL_RESET_FLAG_IMMEDIATE);
+		if (err) {
+			dev_err(&chan->video->dev, "vi capture release failed\n");
+			goto done;
+		}
+		vi_channel_close_ex(chan->vi_channel_id[vi_port],
+					chan->tegra_vi_channel[vi_port]);
 		chan->tegra_vi_channel[vi_port] = NULL;
-		kfree(chan->tegra_vi_channel[vi_port]);
 	}
 
 
@@ -950,7 +956,7 @@ static int vi5_channel_start_streaming(struct vb2_queue *vq, u32 count)
 
 		ret = vi5_channel_start_kthreads(chan);
 		if (ret != 0)
-			goto err_setup;
+			goto err_setup_kthreads;
 	}
 
 	/* csi stream/sensor devices should be streamon post vi channel setup */
@@ -971,10 +977,17 @@ err_set_stream:
 	if (!chan->bypass)
 		vi5_channel_stop_kthreads(chan);
 
+err_start_kthreads:
+	if (!chan->bypass)
+		for (vi_port = 0; vi_port < chan->valid_ports; vi_port++)
+			vi_capture_release(chan->tegra_vi_channel[vi_port],
+				CAPTURE_CHANNEL_RESET_FLAG_IMMEDIATE);
+
 err_setup:
 	if (!chan->bypass)
 		for (vi_port = 0; vi_port < chan->valid_ports; vi_port++) {
-			filp_close(chan->fp[vi_port], NULL);
+			vi_channel_close_ex(chan->vi_channel_id[vi_port],
+						chan->tegra_vi_channel[vi_port]);
 			chan->tegra_vi_channel[vi_port] = NULL;
 		}
 
