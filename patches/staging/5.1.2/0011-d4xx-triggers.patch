diff --git a/kernel/nvidia/drivers/media/i2c/max9295.c b/kernel/nvidia/drivers/media/i2c/max9295.c
index 3fcc40761..9ea705179 100644
--- a/kernel/nvidia/drivers/media/i2c/max9295.c
+++ b/kernel/nvidia/drivers/media/i2c/max9295.c
@@ -624,9 +624,24 @@ int max9295_init_settings(struct device *dev)
 		{MAX9295_START_PIPE_ADDR, 0xF0},
 	};
 
+	static struct reg_pair map_depth_trigger[] = {
+	//	{0x02D6, 0x84}, // #MFP8
+	//	{0x02D7, 0x60}, // #OUT_TYPE bit to 1
+	//	{0x02D8, 0x1F},
+		{0x02C1, 0x84}, // #MFP1
+		{0x02C2, 0x20}, // #OUT_TYPE bit to 1 (no pullup)
+		{0x02C3, 0x1F},
+	};
+
+	static struct reg_pair map_rgb_trigger[] = {
+		{0x02BE, 0x84}, // #MFP0
+		{0x02BF, 0x20}, // #OUT_TYPE bit to 1  (no pullup)
+		{0x02C0, 0x1B},
+	};
+
 	if (!priv) 
 		return -EINVAL;
-	
+
 	mutex_lock(&priv->lock);
 
 	err |= max9295_set_registers(dev, map_pipe_opt, ARRAY_SIZE(map_pipe_opt));
@@ -635,6 +650,13 @@ int max9295_init_settings(struct device *dev)
 		err |= __max9295_set_pipe(dev, i, GMSL_CSI_DT_YUV422_8,
 						GMSL_CSI_DT_EMBED, i);
 
+	// Trigger Depth
+	err |= max9295_set_registers(dev, map_depth_trigger,
+				     ARRAY_SIZE(map_depth_trigger));
+	// Trigger RGB
+	err |= max9295_set_registers(dev, map_rgb_trigger,
+				     ARRAY_SIZE(map_rgb_trigger));
+
 	mutex_unlock(&priv->lock);
 
 	return err;
diff --git a/kernel/nvidia/drivers/media/i2c/max9296.c b/kernel/nvidia/drivers/media/i2c/max9296.c
index 4c15f1efc..b2a529c51 100644
--- a/kernel/nvidia/drivers/media/i2c/max9296.c
+++ b/kernel/nvidia/drivers/media/i2c/max9296.c
@@ -967,6 +967,20 @@ int max9296_init_settings(struct device *dev)
 	int i;
 	struct max9296 *priv = dev_get_drvdata(dev);
 
+	static struct reg_pair map_depth_trigger[] = {
+		// For GMSL_10CH_first board (isx031 and d457 use one trig gpio)
+		{0x02C2, 0x82}, // #MFP6
+		{0x02C3, 0x1F},
+		// For GMSL_10CH_SCH_V1.1 version (isx031 and d457 use diffrent trig gpio )
+		// {0x02C5, 0x82}, #MFP7
+		// {0x02C6, 0x1F},
+	};
+
+	static struct reg_pair map_rgb_trigger[] = {
+		{0x02CB, 0x82}, // #MFP9
+		{0x02CC, 0x1B},
+	};
+
 	mutex_lock(&priv->lock);
 
 	if (!priv->settings_setup) {
@@ -977,6 +991,14 @@ int max9296_init_settings(struct device *dev)
 		priv->settings_setup = true;
 	}
 
+	// Trigger Depth
+	err |= max9296_set_registers(dev, map_depth_trigger,
+				    ARRAY_SIZE(map_depth_trigger));
+	// Trigger RGB
+	err |= max9296_set_registers(dev, map_rgb_trigger,
+                    ARRAY_SIZE(map_rgb_trigger));
+	
+
 	mutex_unlock(&priv->lock);
 
 	return err;
